C51 COMPILER V9.01   MAIN                                                                  08/17/2020 16:10:20 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: S:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg52.h>
   2          
   3          #define GPIO_DIG P0
   4          #define GPIO_KEY P1
   5          
   6          typedef unsigned int u16;
   7          typedef unsigned char u8;
   8          
   9          u8 KEY_VALUE; // 用来存放读取到的键值
  10          
  11          void display_digital(u8,u8);
  12          void delay(u16);
  13          void key_down(void);
  14          void my_key_down(void);
  15          
  16          // 设置数码管编码
  17          u8 code smgduan[16] = {
  18              0x3F/*0*/,0x06/*1*/,0x5B/*2*/,0x4F/*3*/,
  19              0x66/*4*/,0x6D/*5*/,0x7D/*6*/,0x07/*7*/,
  20              0x7F/*8*/,0x6F/*9*/,0x77/*A*/,0x7C/*B*/,
  21              0x39/*C*/,0x5E/*D*/,0x79/*E*/,0x71/*F*/
  22          };
  23          
  24          u8 smgduan_len = sizeof(smgduan) / sizeof(smgduan[0]);
  25          
  26          u8 led_idx , led_num , f;
  27          
  28          void main(void)
  29          {
  30   1      
  31   1          while(1)
  32   1          {
  33   2              key_down();
  34   2              GPIO_DIG=smgduan[KEY_VALUE];
  35   2          }
  36   1      }
  37          
  38          
  39          /**
  40           * 显示指定单个数码管
  41           * 参数: 
  42           *  n指定点亮第几个数码管,从0开始计数
  43           *  num指定显示数字，从0开始计数
  44           */
  45          void display_digital(u8 n,u8 num)
  46          {
  47   1          u8 idx = 0xff - (n * 4);
  48   1          P2 &= idx;
  49   1          P0 = smgduan[num];
  50   1      }
  51          
  52          /**
  53           * 演示函数10000大约1ms
  54           * */
  55          void delay(u16 us)
C51 COMPILER V9.01   MAIN                                                                  08/17/2020 16:10:20 PAGE 2   

  56          {
  57   1          while(us--);
  58   1      }
  59          
  60          
  61          void key_down(void)
  62          {
  63   1          char a = 0;
  64   1          GPIO_KEY = 0x0f; // 给低4位送高电平,低四位控制列，高四位控制行
  65   1      
  66   1          if(GPIO_KEY!=0x0f)
  67   1          {
  68   2              delay(10000); // 消除抖动
  69   2              if (GPIO_KEY!=0x0f) // 再次检查按键是否被按下
  70   2              {
  71   3      
  72   3                  // 测试列
  73   3                  GPIO_KEY=0x0f;
  74   3                  switch(GPIO_KEY)
  75   3                  {
  76   4                      case(0x07): KEY_VALUE = 0; break;
  77   4                      case(0x0b): KEY_VALUE = 1; break;
  78   4                      case(0x0d): KEY_VALUE = 2; break;
  79   4                      case(0x0e): KEY_VALUE = 3; break;
  80   4                  }
  81   3      
  82   3                  //测试行
  83   3                  GPIO_KEY=0xf0;
  84   3                  switch(GPIO_KEY)
  85   3                  {
  86   4                      case(0x70): KEY_VALUE = KEY_VALUE; break;
  87   4                      case(0xb0): KEY_VALUE = KEY_VALUE+4; break;
  88   4                      case(0xd0): KEY_VALUE = KEY_VALUE+8; break;
  89   4                      case(0xe0): KEY_VALUE = KEY_VALUE+12; break;
  90   4                  }
  91   3              }
  92   2          }
  93   1      
  94   1          delay(1000);
  95   1          /*
  96   1          while ((a<50)&&(GPIO_KEY!=0xf0)) {
  97   1              delay(100);
  98   1              a++;
  99   1          }
 100   1          */
 101   1      
 102   1      }
 103          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    156    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
