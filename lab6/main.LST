C51 COMPILER V9.01   MAIN                                                                  08/20/2020 17:20:46 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: S:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /**
   2           * 定时器中断实验
   3           * 秒表计时
   4           */
   5          #include <reg52.h>
   6          
   7          typedef unsigned int u16;
   8          typedef unsigned char u8;
   9          
  10          void init_interrupt(void);
  11          void task_1ms();
  12          void fill_digital_led(u8*,u16,u8);
  13          void delay(u8);
  14          void display_digital_led(u8*);
  15          
  16          u16 ms = 0; // 毫秒数
  17          u16 se = 0; // 秒数
  18          u16 mi = 0; // 分钟数
  19          u16 hou = 0; // 小时数
  20          
  21          // 设置数码管编码
  22          u8 code smgduan[17] = {
  23              0x3F/*0*/,0x06/*1*/,0x5B/*2*/,0x4F/*3*/,
  24              0x66/*4*/,0x6D/*5*/,0x7D/*6*/,0x07/*7*/,
  25              0x7F/*8*/,0x6F/*9*/,0x77/*A*/,0x7C/*B*/,
  26              0x39/*C*/,0x5E/*D*/,0x79/*E*/,0x71/*F*/,
  27              0x40/*-*/
  28          };
  29          
  30          void main(void)
  31          {
  32   1          init_interrupt();
  33   1          while(1)
  34   1          {
  35   2              u8 time[8] = { 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f };
  36   2              fill_digital_led(time,hou,1);
  37   2              time[2] = smgduan[16];
  38   2              fill_digital_led(time,mi,4);
  39   2              time[5] = smgduan[16];
  40   2              fill_digital_led(time,se,7);
  41   2              display_digital_led(time);
  42   2          }
  43   1      }
  44          
  45          /**
  46           * 定时器中断初始化
  47           */
  48          void init_interrupt(void)
  49          {
  50   1      
  51   1          EA = 1; // 打开中断总开关
  52   1          ET0 = 1; // 定时器0中断使能
  53   1      
  54   1          // 设置定时器允许方式1
  55   1          TMOD |= 0x01; 
C51 COMPILER V9.01   MAIN                                                                  08/20/2020 17:20:46 PAGE 2   

  56   1      
  57   1          // th0 tl0赋初始值,1ms
  58   1          // 1个机器周期等于12个震荡周期，震荡周期为1/12MHZ; 1us = 12 * 1/12;
  59   1          // 1ms = 1000 * 1us
  60   1          // 16位计时器初值设置 = 65536 - 1000 + 1
  61   1          TH0 = 0XFC;
  62   1          TL0 = 0x18;
  63   1      
  64   1          TR0=1; // 打开计时器开始计时
  65   1      }
  66          
  67          /**
  68           * 定时器0中断方法
  69           * */
  70          void time0() interrupt 1
  71          {
  72   1          TH0 = 0XFC;
  73   1          TL0 = 0x18;
  74   1          task_1ms();
  75   1      }
  76          
  77          /**
  78           * 1毫秒执行任务
  79           */
  80          void task_1ms(void)
  81          {
  82   1          if(++ms%1000 == 0)
  83   1          {
  84   2              ms = 0;
  85   2              if (++se%60 == 0)
  86   2              {
  87   3                  se = 0;
  88   3                  if(++mi%60 == 0)
  89   3                  {
  90   4                      mi = 0;
  91   4                      if(++hou%60 == 0)
  92   4                      {
  93   5                          hou = 0;
  94   5                      }
  95   4                  }
  96   3              }
  97   2          }
  98   1      }
  99          
 100          /**
 101           * 填充数码管显示的字符
 102           * 参数: 
 103           *  n指定点亮第几个数码管,从0开始计数
 104           *  num指定显示数字，从0开始计数
 105           */
 106          void fill_digital_led(u8 *arr, u16 num,u8 idx)
 107          {
 108   1          u8 flag = 1;
 109   1          while(flag)
 110   1          {
 111   2              u8 num_pos = num%10;
 112   2              num /= 10;
 113   2      
 114   2              arr[idx--]=smgduan[num_pos];
 115   2              flag = num;
 116   2          }
 117   1      }
C51 COMPILER V9.01   MAIN                                                                  08/20/2020 17:20:46 PAGE 3   

 118          
 119          /**
 120           * 延时函数
 121           */
 122          void delay(u8 us)
 123          {
 124   1          while(us--);
 125   1      }
 126          
 127          /**
 128           * 显示数码管
 129           */
 130          void display_digital_led(u8* arr)
 131          {
 132   1          char i,idx;
 133   1          P2 = 0xFF;
 134   1          P0 = arr[0];
 135   1          idx = 0;
 136   1          for(i=-5; i >= -33; )
 137   1          {           
 138   2              P0 = arr[idx++];
 139   2              delay(100);
 140   2              P0 = 0x0;
 141   2      
 142   2              P2 = i;
 143   2              i = i - 4;
 144   2              if(idx > 16)idx = 0;
 145   2          }
 146   1      }
 147          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    435    ----
   CONSTANT SIZE    =     25    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8      18
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
